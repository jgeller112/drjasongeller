{
  "hash": "8d5e9cb18445554b65f5e63720d6fbd6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analzying GazePoint Pupil Data With GazeR\"\ndate: 2021-04-21\ndescription: \"I demonstrate how to analyze pupil data from a GazePoint tracker with my eye-tracking R package gazeR.\"\ncategories:\n  - r\n  - pupillometry\n  - statistics\nformat:\n  html: \n    shift-heading-level-by: 1\n    include-in-header:\n      - text: |\n          <style type=\"text/css\">\n          hr.dinkus {\n              width: 50px;\n              margin: 2em auto 2em;\n              border-top: 5px dotted #454545;\n          }\n          \n          div.column-margin+hr.dinkus {\n              margin: 1em auto 2em;\n          }\n          </style>\ncitation: true\nexecute: \n  echo: true\n  message: false\n  warning: false\n---\n\n\nIn this vignette I am going to show you how to read in a GazePoint data file along with some behavioral data and use `gazeR` to preprocess the data.\n\nSpecial thanks to Matthew K Robinson (Twitter:@matthewkrobinson) for letting me use some data from an auditory oddball task he conducted on himself (we do what we have to do as researchers :D): see Tweet below.\n\n\n{{< tweet sellorm 1384208857790959617 >}}\n\n\n\nTo get started, we need to load in some important packages and read in the GP data files.\n\n# Load Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(remotes)\nremotes::install_github(\"dmirman/gazer\")\nlibrary(gazer)\nlibrary(data.table)\nlibrary(here)\nremotes::install_github(\"tmalsburg/saccades/saccades\", dependencies=TRUE)\nlibrary(saccades)\n```\n:::\n\n\n# Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npd <- fread('oddball_eye_13.tsv') # eye data \nbs<-fread('oddball_13.tsv') # behave data\n\nhead(pd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     CNT     TIME    TIME_TICK    FPOGX     FPOGY    FPOGS   FPOGD FPOGID FPOGV\n   <int>    <num>        <i64>    <num>     <num>    <num>   <num>  <int> <int>\n1: 77433 1251.964 102150661899 -4.40518 -13.98604 1251.883 0.08093   1917     1\n2: 77434 1251.980 102150821625 -4.39508 -13.95200 1251.883 0.09692   1917     1\n3: 77435 1251.996 102150983307 -4.36427 -13.84678 1251.883 0.09692   1917     0\n4: 77436 1252.013 102151149297 -4.40694 -13.99395 1251.883 0.09692   1917     0\n5: 77437 1252.028 102151307171 -4.42096 -14.04383 1251.883 0.09692   1917     0\n6: 77438 1252.045 102151469190 -4.40730 -14.00445 1251.883 0.09692   1917     0\n     LPOGX   LPOGY LPOGV    RPOGX     RPOGY RPOGV    BPOGX     BPOGY BPOGV\n     <num>   <num> <int>    <num>     <num> <int>    <num>     <num> <int>\n1: 0.71795 0.50537     1 -9.38697 -28.00086     1 -4.33451 -13.74775     1\n2: 0.71795 0.50537     1 -9.38697 -28.00086     1 -4.33451 -13.74775     1\n3: 0.70711 0.51136     1 -9.14516 -27.18135     1 -4.21902 -13.33500     1\n4: 0.70151 0.43055     1 -9.60071 -28.71280     1 -4.44960 -14.14113     1\n5: 0.70270 0.42562     1 -9.60071 -28.71280     1 -4.44900 -14.14359     1\n6: 0.69827 0.43625     1 -9.34484 -27.89350     1 -4.32329 -13.72862     1\n      LPCX    LPCY      LPD     LPS   LPV    RPCX    RPCY      RPD   RPS   RPV\n     <num>   <num>    <num>   <num> <int>   <num>   <num>    <num> <num> <int>\n1: 0.34860 0.59214 25.23420 0.83829     1 0.64310 0.60511 28.49240     1     1\n2: 0.34860 0.59216 25.27127 0.83829     1 0.64314 0.60509 28.33148     1     1\n3: 0.34845 0.59234 25.09805 0.83829     1 0.64293 0.60517 28.69580     1     1\n4: 0.34846 0.59237 25.15947 0.83829     1 0.64286 0.60519 28.47081     1     1\n5: 0.34838 0.59240 25.32249 0.84484     1 0.64285 0.60518 28.46784     1     1\n6: 0.34830 0.59240 25.07680 0.85139     1 0.64269 0.60527 28.50588     1     1\n      LEYEX    LEYEY   LEYEZ LPUPILD LPUPILV   REYEX    REYEY   REYEZ RPUPILD\n      <num>    <num>   <num>   <num>   <int>   <num>    <num>   <num>   <num>\n1: -0.03362 -0.01726 0.56538 0.00455       1 0.03052 -0.01989 0.57411 0.00512\n2: -0.03438 -0.01769 0.57821 0.00451       1 0.03056 -0.01997 0.57644 0.00513\n3: -0.03438 -0.01769 0.57821 0.00449       1 0.03056 -0.01997 0.57644 0.00510\n4: -0.03438 -0.01769 0.57821 0.00451       1 0.03056 -0.01997 0.57644 0.00509\n5: -0.03501 -0.01795 0.58649 0.00448       1 0.03130 -0.02049 0.59132 0.00509\n6: -0.03501 -0.01795 0.58649 0.00450       1 0.03130 -0.02049 0.59132 0.00508\n   RPUPILV      CX      CY    CS  BKID BKDUR BKPMIN    LPMM LPMMV    RPMM RPMMV\n     <int>   <num>   <num> <int> <int> <num>  <int>   <num> <int>   <num> <int>\n1:       1 0.33333 0.33333     0     0     0     20 4.54567     1 5.11614     1\n2:       1 0.33333 0.33333     0     0     0     20 4.51065     1 5.12683     1\n3:       1 0.33333 0.33333     0     0     0     20 4.48607     1 5.10490     1\n4:       1 0.33333 0.33333     0     0     0     20 4.50748     1 5.09460     1\n5:       1 0.33333 0.33333     0     0     0     20 4.47957     1 5.08827     1\n6:       1 0.33333 0.33333     0     0     0     20 4.50258     1 5.07552     1\n    DIAL DIALV   GSR  GSRV    HR   HRV   HRP  TTL0  TTL1  TTLV            USER\n   <num> <int> <int> <int> <int> <int> <int> <int> <int> <int>          <char>\n1: 0.088     1     0     0     0     0   454    -1    -1     0               0\n2: 0.088     1     0     0     0     0   484    -1    -1     0 STARTEXPERIMENT\n3: 0.088     1     0     0     0     0   456    -1    -1     0 STARTEXPERIMENT\n4: 0.088     1     0     0     0     0   451    -1    -1     0           START\n5: 0.088     1     0     0     0     0   482    -1    -1     0           START\n6: 0.088     1     0     0     0     0   454    -1    -1     0           START\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(bs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   subject trial   tone    rt response\n     <int> <int> <char> <int>   <char>\n1:      13     1     lo  2113     None\n2:      13     2     lo  2102     None\n3:      13     3     lo  2107     None\n4:      13     4     lo  2108     None\n5:      13     5     lo  2107     None\n6:      13     6     lo  2103     None\n```\n\n\n:::\n:::\n\n\nWhat we are going to do is run the GazePoint file through the `merge_gazepoint` function. The function below takes a list of files called file_list and merges all the files together, appends a subject column, creates a trial column using the USER column (GazePoint only allows messages through this channel), creates a time variable (in milliseconds). In the `merge_gazepoint` function the `trail_msg` argument requires users to denote a message used in the USER column that references the start of the trial--in our case the `START` message denotes the start of a new trial. This is a solution by Matt Robinson, but there are other ways one could extract the trial number. What I have done in the past is append a message with the trial iteration (e.g., START_1) in Python and use the `separate` function to get the trial number.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A \"monocular mean\" averages both eyes together. If data is available in just\n# one eye, use the available value as the mean, unless we need_both is TRUE.\n#' @param x1 pupil left\n#' @param x2 pupil right\n#' @return vector with monocular mean values\ncompute_monocular_mean <- function(x1, x2) {\n  xm <- rowMeans(cbind(x1, x2), na.rm = TRUE)\n  # NaN => NA\n  ifelse(is.nan(xm), NA, xm)\n}\n\n\n# function for processing GazePoint data\nmerge_gazepoint <- function (file_list, trial_msg = \"START\"){\n  #file list is path to .xls files\n  #vroom is faster\n  library(data.table)\n  \n  file_ids=str_replace_all(basename(file_list),\"([:alpha:]|[:punct:])\",\"\") # remove everything but numeric values\n                   \n  data <- map2(file_list, file_ids, ~fread(.x) %>% \n    mutate(id = .y))  %>% \n    bind_rows()\n\n  \n  d = data %>%\n    dplyr::rowwise() %>%\n    dplyr::mutate(pupil=compute_monocular_mean(RPMM, LPMM)) %>% # average both eyes\n             dplyr::ungroup() %>%\n           dplyr::mutate(pupil = ifelse(RPMMV == 0|LPMMV == 0, 0, pupil),  #missing data labeled as blinks\n         new_trial = ifelse(USER == trial_msg & lag(USER) != trial_msg, 1, 0), # Label new trials\n         trial = cumsum(new_trial), # Create a trial variable\n         time = floor(TIME*1000)) %>%\n    group_by(trial) %>%\n    dplyr::mutate(time=time - min(time)) %>%\n    ungroup() %>%\n  dplyr::select(id, time,trial,pupil,BPOGX, BPOGY, USER) %>%\n    dplyr::rename(\"message\" = \"USER\", \"subject\"= \"id\", \"x\" = \"BPOGX\", \"y\" = \"BPOGY\") %>% \n    dplyr::filter(trial > 0)\n  \n  return(d)\n}\n```\n:::\n\n\n# Merge Files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(here()) # setwd\n\ngp_file<-list.files(here::here(), pattern = \"eye_13.tsv\") # get files \n\nsetwd(here())\n      \nd=merge_gazepoint(gp_file, trial_msg = \"START\")\n\nd$subject<-as.numeric(d$subject)\n\npdb <- full_join(bs, d)\n\npdb <- as_tibble(pdb)\n\npdb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 73,724 × 10\n   subject trial tone     rt response  time pupil     x     y message\n     <dbl> <dbl> <chr> <int> <chr>    <dbl> <dbl> <dbl> <dbl> <chr>  \n 1      13     1 lo     2113 None         0  4.80 -4.45 -14.1 START  \n 2      13     1 lo     2113 None        16  4.78 -4.45 -14.1 START  \n 3      13     1 lo     2113 None        32  4.79 -4.32 -13.7 START  \n 4      13     1 lo     2113 None        48  4.80 -4.58 -14.5 START  \n 5      13     1 lo     2113 None        64  4.80 -4.58 -14.5 START  \n 6      13     1 lo     2113 None        81  4.79 -4.63 -14.7 START  \n 7      13     1 lo     2113 None        97  4.81 -4.42 -14.0 START  \n 8      13     1 lo     2113 None       113  4.80 -4.42 -14.0 TONE   \n 9      13     1 lo     2113 None       129  4.78 -4.23 -13.5 TONE   \n10      13     1 lo     2113 None       145  4.77 -4.34 -13.8 TONE   \n# ℹ 73,714 more rows\n```\n\n\n:::\n:::\n\n\n# Blinks\n\n## Finding Blinks\n\nThe GazePoint data does not indicate where blinks occurred. What we are going to do is use the `blink_detect` function in gazer. This relies on the `saccades` package (<https://github.com/tmalsburg/saccades)> which uses a velocity based measure based on X,Y coordinates to find blinks. Once we find the blinks we can change the pupil size at that time point as NA and interpolate over it.\n\nAs a note, the GazePoint does not seem to sample consistently. In this case, it samples every 16 or 17 ms. This is a problem for some other blink detection measures (e.g., the noise based pupil function). One soultion would be to downsample the data at the onset so there is consistancy from sample to sample.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblinks_merge<- blink_detect(pdb)\n\n blinks <- blinks_merge %>%\n        dplyr::group_by(grp = cumsum(!is.na(startend))) %>%\n        dplyr::mutate(Label = replace(startend, first(startend) == 'start', 'start')) %>% #extends the start message forward until end message\n        dplyr::ungroup() %>%\n        # label blinks as 1\n        dplyr::select(subject, trial, time, x, y, pupil, message, tone,  Label, -grp)\n \n \n blinks_data <- blinks  %>%\n        dplyr::mutate(blink=ifelse(!is.na(Label), 1, 0), pupil=ifelse(blink==1 | pupil==0, NA, pupil))%>%\n        dplyr::ungroup()%>%\n        dplyr::select(subject, time, trial, pupil, x, y, trial, message, tone, blink, -Label)\n```\n:::\n\n\nHere is a look at the trials containing blinks:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nblinks_data %>% \n  filter(blink==1) %>%\n  head()%>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n| subject| time| trial| pupil|      x|       y|message  |tone | blink|\n|-------:|----:|-----:|-----:|------:|-------:|:--------|:----|-----:|\n|      13| 2167|    10|    NA| 0.9364| 1.95015|POSTTONE |lo   |     1|\n|      13| 2183|    10|    NA| 0.9364| 1.95015|POSTTONE |lo   |     1|\n|      13| 2199|    10|    NA| 0.9364| 1.95015|POSTTONE |lo   |     1|\n|      13| 2216|    10|    NA| 0.9364| 1.95015|POSTTONE |lo   |     1|\n|      13|    0|    11|    NA| 0.9364| 1.95015|START    |hi   |     1|\n|      13|   16|    11|    NA| 0.9364| 1.95015|START    |hi   |     1|\n\n\n:::\n:::\n\n\n## Extending Blinks\n\nI am extending blinks 100 ms forward and backward in time.\n\n\n::: {.cell}\n\n:::\n\n\n## Interpolate Blinks\n\nHere let's linearly interpolate the blinks and then smooth the data using a 5-point moving average.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Smooth and Interpolate\nsmooth_interp <- smooth_interpolate_pupil(pup_extend, pupil=\"pupil\", extendpupil=\"extendpupil\", extendblinks=TRUE, step.first=\"smooth\", maxgap=Inf, type=\"linear\", hz=60, n=5)\n```\n:::\n\n\n# Plot Interpolated Trial\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninterp_graph <- smooth_interp  %>%\n  dplyr::filter(trial==\"400\")\n\nbold <- element_text(face = \"bold\", color = \"black\", size = 14) #axis bold\n#Graph interpolation\npup_g<- ggplot(interp_graph, aes(x= time, y= pupil)) + geom_point()+ geom_line(colour=\"black\") +\n  geom_line(aes(x=time, y=pup_interp), colour=\"darkgreen\") + xlab(\"Time (ms)\") + ylab(\"Pupil Size (mm)\") + theme_bw() + theme(axis.title.y=element_text(size = 16, face=\"bold\"), axis.title.x = element_text(size=16, face=\"bold\"), axis.text.x=element_text(size = 12, face=\"bold\"), axis.text.y=element_text(size=12, face=\"bold\"))\nprint(pup_g)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n# Baseline Correction\n\nHere we will do a subtractive baseline correction taking 250 ms before the onset of the tone as baseline.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#use messages to baseline correct\nbaseline_pupil<-baseline_correction_pupil(smooth_interp, pupil_colname=\"pup_interp\", baseline_window=c(0,250), baseline_method = \"sub\")\n\nhead(baseline_pupil)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 13\n  subject trial baseline  time pupil     x     y message tone  blink extendpupil\n    <dbl> <dbl>    <dbl> <dbl> <dbl> <dbl> <dbl> <chr>   <chr> <dbl>       <dbl>\n1      13     1     4.80     0  4.80 -4.45 -14.1 START   lo        0        4.80\n2      13     1     4.80    16  4.78 -4.45 -14.1 START   lo        0        4.78\n3      13     1     4.80    32  4.79 -4.32 -13.7 START   lo        0        4.79\n4      13     1     4.80    48  4.80 -4.58 -14.5 START   lo        0        4.80\n5      13     1     4.80    64  4.80 -4.58 -14.5 START   lo        0        4.80\n6      13     1     4.80    81  4.79 -4.63 -14.7 START   lo        0        4.79\n# ℹ 2 more variables: pup_interp <dbl>, baselinecorrectedp <dbl>\n```\n\n\n:::\n:::\n\n\n# Missing Data\n\nLet's see how much missing data there is and remove trials with greater than 20% missing data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npup_missing<-count_missing_pupil(baseline_pupil, missingthresh = .5)\n# remove outliers\n```\n:::\n\n\nI remove about 15 percent of trials.\n\n# Unlikely Pupil Sizes\n\nNow let's keep pupil diameter sizes between 2 mm and 9 mm\n\n\n::: {.cell}\n\n```{.r .cell-code}\npup_outliers<-pup_missing %>%\n  dplyr::filter (pup_interp  >= 2, pup_interp <= 9)\n```\n:::\n\n\n# MAD\n\nGet rid of artifacts we might have missed during some earlier steps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  #MAD removal\nmax_removal<-pup_missing  %>%\n  dplyr::group_by(subject, trial) %>%\n  dplyr::mutate(speed=speed_pupil(pup_interp,time)) %>%\n  dplyr::mutate(MAD=calc_mad(speed)) %>%\n  dplyr::filter(speed < MAD)\n```\n:::\n\n\n# Onset\n\nLet's only look fron the start of the trial until 1500 ms\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseline_pupil_onset<-max_removal %>%\n  dplyr::group_by(subject, trial) %>%\n  dplyr::filter(time <= 1500) %>%\n  select(subject, trial, time,baselinecorrectedp, tone, time,message,baselinecorrectedp)\n```\n:::\n\n\n# Downsample\n\nDownsample the time-course to 50 ms.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#downsample\ntimebins1<- downsample_gaze(baseline_pupil_onset, bin.length=50, timevar = \"time\", aggvars = c(\"subject\", \"tone\", \"timebins\"), type=\"pupil\")\n\ntimebins1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 62 × 4\n   subject tone  timebins aggbaseline\n     <dbl> <chr>    <dbl>       <dbl>\n 1      13 hi           0    0.00130 \n 2      13 hi          50   -0.000752\n 3      13 hi         100   -0.00206 \n 4      13 hi         150    0.000331\n 5      13 hi         200    0.00530 \n 6      13 hi         250    0.00503 \n 7      13 hi         300    0.00826 \n 8      13 hi         350    0.00930 \n 9      13 hi         400    0.0116  \n10      13 hi         450    0.0125  \n# ℹ 52 more rows\n```\n\n\n:::\n:::\n\n\n# Visualize Time-course\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncursive_plot <-ggplot(timebins1)+\n  aes(timebins, aggbaseline, linetype=tone, color=tone) +\n  stat_summary(fun = \"mean\", geom = \"line\", size = 1) +\n  theme_bw() +\n  labs(x =\"Time (ms)\",y =\"Pupil Dilation (baseline - pupil))\") +\n  geom_hline(yintercept=0.0)\n\nprint(cursive_plot)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nThis looks very similar to the one in the Tweet albeit a bit smoother as a result of the extra preprocessing done.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}